"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GitpodIdProvider = void 0;
const envVar_1 = __importDefault(require("../../common/envVar"));
const uuid_1 = require("../../common/utils/uuid");
const logger_1 = require("../../common/utils/logger");
let userId;
class GitpodIdProvider {
    constructor(delegate) {
        this.delegate = delegate;
    }
    ;
    async getRedHatUUID() {
        if (!userId) {
            userId = await this.loadRedHatUUID();
        }
        return userId;
    }
    async loadRedHatUUID() {
        try {
            const email = envVar_1.default.GITPOD_GIT_USER_EMAIL;
            if (email) {
                userId = (0, uuid_1.generateUUID)(email);
                const anonymousIdFile = this.delegate.getAnonymousIdFile();
                const existingId = this.delegate.readFile(anonymousIdFile);
                if (existingId !== userId) {
                    this.delegate.writeFile(anonymousIdFile, userId);
                }
                return userId;
            }
        }
        catch (error) {
            console.log('Failed to get user id from Gitpod', error);
        }
        //fall back to generating a random UUID
        logger_1.Logger.info('fall back to generating a random UUID');
        return this.delegate.getRedHatUUID();
    }
}
exports.GitpodIdProvider = GitpodIdProvider;
//# sourceMappingURL=gitpodIdProvider.js.map