"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileSystemStorageService = void 0;
const vscode_1 = require("vscode");
const fsUtils_1 = require("./fsUtils");
class FileSystemStorageService {
    constructor(storagePath) {
        this.storagePath = storagePath;
    }
    async readFromFile(fileName) {
        try {
            const filePath = vscode_1.Uri.joinPath(this.storagePath, fileName);
            //Need to await here so if file doesn't exist, it's caught by the catch clause 
            //and we return undefined, instead of a Promise that will fail later
            return await (0, fsUtils_1.readFile)(filePath);
        }
        catch (e) {
            return undefined;
        }
    }
    async writeToFile(filename, content) {
        await this.ensureStoragePathExists();
        const filePath = vscode_1.Uri.joinPath(this.storagePath, filename);
        return (0, fsUtils_1.writeFile)(filePath, content);
    }
    async ensureStoragePathExists() {
        if (!(await (0, fsUtils_1.exists)(this.storagePath))) {
            await (0, fsUtils_1.mkdir)(this.storagePath);
        }
    }
}
exports.FileSystemStorageService = FileSystemStorageService;
//# sourceMappingURL=fileSystemStorageService.js.map